// Jesse's code ***********************
$(document).on("ready", function() {
  $(".datepicker").datepicker();
});



// Maps *******************************
// Raw coordinate data from Instagram
var coordinates = [[37.2,-122.2],[15.3,-90.8],[40.5,-100.1],[35.6672,-105.9644],[37.2,-122.2]];
var travelPoints = [];// Will hold google processed coordinates data
var markers = [];

function initialize(){
  var mapOptions = {
    // Skin
    mapTypeId: google.maps.MapTypeId.TERRAIN,
    styles: [{"featureType":"landscape",
              "stylers":[{"lightness":5},{"hue":"#ff001a"},{"saturation":-51}]},
              {"featureType":"road.highway","stylers":[{"hue":"#ff0011"},{"lightness":53}]},
              {"featureType":"poi.park","stylers":[{"hue":"#00ff91"}]},
              {"elementType":"labels","stylers":[{"lightness":63},{"hue":"#ff0000"}]},
              {"featureType":"road","elementType":"labels","stylers":[{"visibility":"off"}]}
              ]
  };
  var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
  var bounds = new google.maps.LatLngBounds();
  mapPoints();// Process coordinates
  autoMarkers(bounds, map);// Draw markers
  map.fitBounds(bounds); // set center and zoom level

  // SEARCH
  // Create the search box and link it to the UI element.
  var input = document.getElementById('search-maps');
  map.controls[google.maps.ControlPosition.TOP].push(input);
  var searchBox = new google.maps.places.SearchBox(input);

  // Listen for search event
  google.maps.event.addListener(searchBox, 'places_changed', function(){
    var places = searchBox.getPlaces();
    var place = places[0];
    travelPoints.push(place.geometry.location);
    // Update Marker draw
    autoMarkers(bounds, map);
    map.fitBounds(bounds);
  });
}

// convert coordinates into google.map objects
var mapPoints = function(){
  for (var i = 0; i < coordinates.length; i++){
    travelPoints.push(new google.maps.LatLng(coordinates[i][0], coordinates[i][1]));
  }
};

// Draw markers with delay animation
function autoMarkers(bounds, map){
  for (var i = 0, iterate = 0, x = i+1; i < travelPoints.length; i++){
    image = new google.maps.MarkerImage("<%= asset_path('pin.png') %>");
    image.anchor = new google.maps.Point(12, 53);
    setTimeout(function(){
      marker = new google.maps.Marker({
        position: travelPoints[iterate],
        map: map,
        draggable: true,
        animation: google.maps.Animation.DROP,
        icon: image
      });
      var line = new google.maps.Polyline({
        geodesic: true,
        path: [travelPoints[iterate], travelPoints[iterate+1]],
        strokeColor:"#36a657",
        strokeOpacity:0.7,
        strokeWeight:3,
        map: map
      });
      iterate++;
    marker.setTitle("Marker");
    markerMessage(map, marker, i);
    }, (i+3) * 200);

    bounds.extend(travelPoints[i]); // zoom boundary
  }
}

function markerMessage(map, marker, num) {
  var infowindow = new google.maps.InfoWindow({
    content: 'Test Info'
  });
  google.maps.event.addListener(marker, 'click', function() {
    infowindow.open(marker.get('map'), marker);
  });
}


// Creates javascript tags and calls initialize function
function loadScript() {
  var GOOGLE_KEY = "<%= Rails.application.secrets.google_key %>";
  var script = document.createElement('script');
  script.src = 'https://maps.googleapis.com/maps/api/js?key=' + GOOGLE_KEY + '&sensor=true&libraries=places&callback=initialize';
  document.body.appendChild(script);
}

window.onload = loadScript;
// google.maps.event.addDomListener(window, 'load', loadScript);
